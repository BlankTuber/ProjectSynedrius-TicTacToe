<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Tic-Tac-Toe</title>
        <link rel="stylesheet" href="styles/style.css">
    </head>
    <body>
        <h1>Tic-Tac-Toe Game</h1>
        <h2>Current player: <b id="currentPlayer"></b></h2>
        <h2>You are: <b id="roleDisplay"></b></h2>
        <div id="winnerDiv">
            <h2 id="winnerDisplay"></h2>
        </div>
        <div id="game">
            <table border="1" id="tttable">
                <tr>
                    <td class="tttcell" data-row="0" data-col="0" data-owner=""></td>
                    <td class="tttcell" data-row="0" data-col="1" data-owner=""></td>
                    <td class="tttcell" data-row="0" data-col="2" data-owner=""></td>
                </tr>
                <tr>
                    <td class="tttcell" data-row="1" data-col="0" data-owner=""></td>
                    <td class="tttcell" data-row="1" data-col="1" data-owner=""></td>
                    <td class="tttcell" data-row="1" data-col="2" data-owner=""></td>
                </tr>
                <tr>
                    <td class="tttcell" data-row="2" data-col="0" data-owner=""></td>
                    <td class="tttcell" data-row="2" data-col="1" data-owner=""></td>
                    <td class="tttcell" data-row="2" data-col="2" data-owner=""></td>
                </tr>
            </table>
        </div>

        <div id="codeDiv">
            <input type="text" id="codeInput" name="code" placeholder="Game Code">
            <button id="codeSubmit">Join</button>
        </div>
        <script src="/socket.io/socket.io.js"></script>
        <script>
            const socket = io();
            let yourSymbol;

            socket.on('connect', () => {
                console.log('Connected to server');
            });

            document.getElementById('codeSubmit').addEventListener('click', function() {
                const code = document.getElementById('codeInput').value.trim();
                if (code) {
                    socket.emit('joinGame', code);
                } else {
                    alert('Please enter a valid game code.');
                }
            });

            socket.on('role', function(role, symbol) {
                console.log('You are a', role);
                yourSymbol = symbol; // Store player's symbol
                document.getElementById('winnerDisplay').innerText = role === 'player' ? `You are ${symbol}` : "You are a spectator";
                if (symbol) {
                    document.getElementById('roleDisplay').innerText = symbol;
                } else {
                    document.getElementById('roleDisplay').innerText = "spectator";
                }
            });

            socket.on('startGame', function(currentPlayer) {
                document.getElementById('currentPlayer').innerText = `${currentPlayer}`;
            });

            socket.on('gameState', function(game) {
                // Update UI based on current game state
                Object.keys(game.plays).forEach(pos => {
                    const [row, col] = pos.split('-');
                    const cell = document.querySelector(`td[data-row="${row}"][data-col="${col}"]`);
                    cell.classList.add('selected');
                    cell.textContent = game.plays[pos];
                    cell.setAttribute('data-owner', game.plays[pos]);
                });
            });

            socket.on('updateState', function(row, col, owner) {
                const cell = document.querySelector(`td[data-row="${row}"][data-col="${col}"]`);
                cell.classList.add('selected');
                cell.textContent = owner;
                cell.setAttribute('data-owner', owner);
                document.getElementById('currentPlayer').innerText = `${owner === 'X' ? 'O' : 'X'}`;
            });

            socket.on('gameOver', function(winner) {
                showWinner(winner === 'Tie' ? "none" : winner);
            });

            socket.on('playerLeft', function(message) {
                alert(message); // Notify user about the player leaving
                document.getElementById('winnerDisplay').innerText = message;
            });

            function showWinner(winner) {
                const winnerMessage = winner === 'none' ? "It's a tie!" : `Player ${winner} wins!`;
                document.getElementById("winnerDisplay").innerText = winnerMessage;
                document.getElementById("winnerDiv").style.display = "flex";
            }

            document.querySelectorAll('.tttcell').forEach(cell => {
                cell.addEventListener('click', (event) => {
                    select(event.target);
                });
            });

            function select(cell) {
                const row = cell.getAttribute('data-row');
                const col = cell.getAttribute('data-col');
                if (!cell.classList.contains('selected') && yourSymbol == document.getElementById('currentPlayer').innerText) {
                    socket.emit('playMove', document.getElementById('codeInput').value.trim(), row, col);
                }
            }
        </script>


    </body>
</html>